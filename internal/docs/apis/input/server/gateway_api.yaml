openapi: 3.1.0
info:
  title: Gateway API
  version: 0.0.0
servers:
  - url: http://{url}:{port}/
    description: Gateway API's URL
    variables:
      url:
        default: localhost
        description: Gateway API's URL
      port:
        # This should reference a config file (which the server's go code should also reference)
        default: 10000
components:
  responses:
    BadRequest:
        description: Bad Request
    Unauthorized:
        description: Unauthorized
    Forbidden:
        description: Forbidden
    UnsupportedMediaType:
        description: Unsupported Media Type
    UnprocessableEntity:
        description: Unprocessable Entity
paths:
  /v1/users:
    post:
      summary: Creates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  rel:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/v1/users/foo'
        '400':
          $ref: '#/components/responses/BadRequest' 
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /v1/users/{username}:
    get:
      summary: Gets user info
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  rel:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/v1/users/foo'
                      session:
                        type: string
                        example: '/v1/users/sessions/foo'
        '406':
          $ref: '#/components/responses/NotAcceptable'

    patch:
      summary: Updates a user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                session-token:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  rel:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/v1/users/foo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

    delete:
      summary: Deletes a user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session-token:
                  type: string
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /v1/users/sessions:
    post:
      summary: Starts a user session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  session-token:
                    type: string
                  rel:
                    type: object
                    properties:
                      self:
                        type: string
                        example: '/v1/users/sessions/foo'
    delete:
      summary: Terminates session
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
        - in: header
          name: session-token
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'